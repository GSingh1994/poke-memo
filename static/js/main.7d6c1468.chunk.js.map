{"version":3,"sources":["Components/Cards.jsx","Components/ScoreBoard.jsx","Components/Footer.jsx","App.js","index.js"],"names":["Cards","sprite","name","id","saveCard","className","onClick","src","alt","ScoreBoard","userScore","gameOver","prevScoreRef","useRef","useEffect","current","prevScore","type","Footer","App","useState","pokeData","setPokeData","lastIndex","setLastIndex","clickedCards","setClickedCards","setUserScore","setGameOver","a","i","fetch","response","json","data","preData","fetchUrl","includes","pokeList","slice","sort","Math","random","preIndex","preScore","map","pokemon","sprites","front_default","forms","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,SAASA,EAAT,GAAgD,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SAChD,OACE,sBACED,GAAG,QACHE,UAAU,8DACVC,QAAS,kBAAMF,EAASD,IAH1B,UAKE,mBAAGA,GAAG,QAAQE,UAAU,QAAxB,SACGH,IAEH,qBAAKG,UAAU,SAASE,IAAKN,EAAQO,IAAI,QCThC,SAASC,EAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACxCC,EAAeC,mBACrBC,qBAAU,WACRF,EAAaG,QAAUL,KAEzB,IAAMM,EAAYJ,EAAaG,QAE/B,OACE,sBAAKV,UAAU,aAAf,UACE,yBAAQY,KAAK,SAASZ,UAAU,qBAAhC,UACE,qBAAIA,UAAU,YAAd,mBAAiCK,KACjC,4CAAeC,EAAWK,EAAY,QAExC,oBAAIX,UAAU,WAAd,SAA0BM,EAAW,YAAc,UCd1C,SAASO,IACtB,OACE,sBAAKb,UAAU,SAAf,UACE,6CADF,IACwB,mBAAGA,UAAU,sB,YC+D1Bc,MA3Df,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,oBAAU,GAA5C,mBAAOV,EAAP,KAAkBiB,EAAlB,KACA,EAAgCP,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBiB,EAAjB,KAEAd,qBAAU,YACM,uCAAG,8BAAAe,EAAA,0DAAAA,EAAA,iBACNC,GADM,iBAAAD,EAAA,sEAEQE,MAAM,qCAAD,OAAsCD,EAAtC,MAFb,cAETE,EAFS,gBAGMA,EAASC,OAHf,OAGPC,EAHO,OAIbZ,GAAY,SAACa,GAAD,4BAAiBA,GAAjB,CAA0BD,OAJzB,0CACNJ,EAAI,EADE,YACCA,EAAI,KADL,yCACNA,GADM,eACUA,GAAK,EADf,0DAAH,qDAOdM,KACC,IAGH,IAAMhC,EAAW,SAACD,GAChBsB,EAAaY,SAASlC,GAClByB,GAAY,GACZF,EAAgB,GAAD,mBAAKD,GAAL,CAAmBtB,MAGlCmC,EAAWjB,EACdkB,MAAMhB,EAAWA,EAAY,GAC7BiB,MAAK,kBAAMC,KAAKC,SAAW,MAO9B,OALA5B,qBAAU,WACRU,GAAa,SAACmB,GAAD,OAAeA,EAAY,KAC7BhB,EAAXhB,EAAwB,EAAkB,SAACiC,GAAD,OAAeA,EAAY,MACpE,CAACjC,EAAUc,IAGZ,sBAAKpB,UAAU,MAAf,UACE,mCACE,2CACA,qDACA,mBAAGA,UAAU,YACb,mBAAGA,UAAU,oBAEf,cAACI,EAAD,CAAYC,UAAWA,EAAWC,SAAUA,IAC5C,sBAAMN,UAAU,YAAhB,SACGiC,EAASO,KAAI,SAACC,GAAD,OACZ,cAAC9C,EAAD,CAEEG,GAAI2C,EAAQ3C,GACZF,OAAQ6C,EAAQC,QAAQC,cACxB9C,KAAM4C,EAAQG,MAAM,GAAG/C,KACvBE,SAAUA,GAJL0C,EAAQ3C,SAQnB,cAACe,EAAD,QCxDNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d6c1468.chunk.js","sourcesContent":["export default function Cards({ sprite, name, id, saveCard }) {\n  return (\n    <div\n      id=\"Cards\"\n      className=\"nes-pointer nes-container with-title is-centered is-rounded\"\n      onClick={() => saveCard(id)}\n    >\n      <p id=\"title\" className=\"title\">\n        {name}\n      </p>\n      <img className=\"sprite\" src={sprite} alt=\"\" />\n    </div>\n  );\n}\n","import { useEffect, useRef } from \"react\";\nexport default function ScoreBoard({ userScore, gameOver }) {\n  const prevScoreRef = useRef();\n  useEffect(() => {\n    prevScoreRef.current = userScore;\n  });\n  const prevScore = prevScoreRef.current;\n\n  return (\n    <div className=\"ScoreBoard\">\n      <button type=\"button\" className=\"nes-btn is-primary\">\n        <h2 className=\"userScore\">Score:{userScore}</h2>\n        <h2>HighScore:{gameOver ? prevScore : 0}</h2>\n      </button>\n      <h2 className=\"gameOver\">{gameOver ? \"GAME OVER\" : null}</h2>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <div className=\"Footer\">\n      <div>Made with </div> <i className=\"nes-icon heart\"></i>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Cards from \"./Components/Cards\";\nimport ScoreBoard from \"./Components/ScoreBoard\";\nimport Footer from \"./Components/Footer\";\nimport \"../node_modules/nes.css/css/nes.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [pokeData, setPokeData] = useState([]);\n  const [lastIndex, setLastIndex] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [userScore, setUserScore] = useState(-1);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    const fetchUrl = async () => {\n      for (let i = 1; i < 100; i += 3) {\n        let response = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`);\n        const data = await response.json();\n        setPokeData((preData) => [...preData, data]);\n      }\n    };\n    fetchUrl();\n  }, []);\n\n  //save card's id only if it's unique otherwise GAMEOVER\n  const saveCard = (id) => {\n    clickedCards.includes(id)\n      ? setGameOver(true)\n      : setClickedCards([...clickedCards, id]);\n  };\n\n  const pokeList = pokeData\n    .slice(lastIndex, lastIndex + 8) //get a slice of some old and some new data\n    .sort(() => Math.random() - 0.5); //Shuffle cards\n\n  useEffect(() => {\n    setLastIndex((preIndex) => (preIndex += 1));\n    gameOver ? setUserScore(0) : setUserScore((preScore) => (preScore += 1));\n  }, [gameOver, clickedCards]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>PokeCards</h1>\n        <h6>Gotta Catch 'Em All</h6>\n        <i className=\"nes-ash\"></i>\n        <i className=\"nes-pokeball\"></i>\n      </header>\n      <ScoreBoard userScore={userScore} gameOver={gameOver} />\n      <main className=\"container\">\n        {pokeList.map((pokemon) => (\n          <Cards\n            key={pokemon.id}\n            id={pokemon.id}\n            sprite={pokemon.sprites.front_default}\n            name={pokemon.forms[0].name}\n            saveCard={saveCard}\n          />\n        ))}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}