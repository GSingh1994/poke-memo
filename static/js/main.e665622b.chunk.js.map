{"version":3,"sources":["Components/Cards.jsx","Components/ScoreBoard.jsx","Components/Footer.jsx","Components/Header.jsx","assets/pika.gif","App.jsx","index.js"],"names":["Cards","sprite","name","id","saveCard","gameOver","style","pointerEvents","className","onClick","src","alt","ScoreBoard","userScore","useState","localScore","setLocalScore","useEffect","localStorageTuNum","parseInt","localStorage","getItem","setHighScore","highScore","setItem","type","Footer","Header","window","location","reload","App","pokeData","setPokeData","lastIndex","setLastIndex","clickedCards","setClickedCards","setUserScore","setGameOver","cardGrid","setCardGrid","loader","setLoader","inProp","setInProp","a","i","fetch","response","json","data","preData","fetchUrl","slice","loaderTimer","setTimeout","clearTimeout","includes","preIndex","preCards","sort","Math","random","preScore","loaderGif","CSSTransition","in","timeout","classNames","map","pokemon","sprites","front_default","forms","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e665622b.chunk.js","sourcesContent":["export default function Cards({ sprite, name, id, saveCard, gameOver }) {\n  return (\n    <div\n      style={gameOver ? { pointerEvents: \"none\" } : null} //Stop card selection on gameover\n      id=\"Cards\"\n      className=\"nes-pointer nes-container with-title is-centered is-rounded\"\n      onClick={() => saveCard(id)}\n    >\n      <p className=\"title\">{name}</p>\n      <img className=\"sprite\" src={sprite} alt=\"\" />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function ScoreBoard({ userScore, gameOver }) {\n  const [localScore, setLocalScore] = useState(0);\n  useEffect(() => {\n    const localStorageTuNum = parseInt(localStorage.getItem(\"highScore\"));\n    setLocalScore(localStorageTuNum || 0); //Setting highScore from localStorage if possible\n\n    setHighScore(localScore);\n  }, []);\n\n  const [highScore, setHighScore] = useState(0);\n  useEffect(() => {\n    if (userScore > localScore) {\n      setHighScore(userScore);\n      localStorage.setItem(\"highScore\", userScore); //set new highScore on gameOver\n    }\n  }, [gameOver]);\n\n  return (\n    <div className=\"ScoreBoard\">\n      <button type=\"button\" className=\"nes-btn is-primary\">\n        {!gameOver ? (\n          <h2 className=\"userScore\">Score:{userScore}</h2>\n        ) : (\n          <h2 className=\"gameOver\">{gameOver ? \"GAME OVER\" : null}</h2>\n        )}\n        <h2>\n          HighScore:\n          {highScore > localScore ? highScore : localScore || 0}\n        </h2>\n      </button>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <div className=\"Footer\">\n      <div>Made with </div> <i className=\"nes-icon heart\"></i>\n    </div>\n  );\n}\n","export default function Header({ gameOver }) {\n  return (\n    <header>\n      <div className=\"nes\">\n        <i className=\"nes-ash\"></i>\n        <div className=\"nes-balloon from-left\">Help me find new pokemons</div>\n      </div>\n\n      <div className=\"title\">\n        <h1>PokeCards</h1>\n        <h6>Gotta Catch 'Em All</h6>\n      </div>\n      <i\n        className={\n          gameOver ? \"vibrate nes-pointer nes-pokeball\" : \"nes-pokeball\"\n        }\n        onClick={() => window.location.reload()}\n      ></i>\n    </header>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pika.a937902d.gif\";","import { useState, useEffect } from \"react\";\nimport Cards from \"./Components/Cards\";\nimport ScoreBoard from \"./Components/ScoreBoard\";\nimport Footer from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\nimport \"../node_modules/nes.css/css/nes.min.css\";\nimport \"./App.scss\";\nimport loaderGif from \"./assets/pika.gif\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function App() {\n  const [pokeData, setPokeData] = useState([]);\n  const [lastIndex, setLastIndex] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [userScore, setUserScore] = useState(-1);\n  const [gameOver, setGameOver] = useState(false);\n  const [cardGrid, setCardGrid] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  const [inProp, setInProp] = useState(false); //inprop for cssTransition\n\n  useEffect(() => {\n    const fetchUrl = async () => {\n      for (let i = 1; i < 100; i += 1) {\n        let response = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`);\n        const data = await response.json();\n        setPokeData((preData) => [...preData, data]);\n      }\n    };\n    fetchUrl();\n  }, []);\n\n  //taking a slice of pokeData\n  useEffect(\n    () => setCardGrid(pokeData.slice(lastIndex, lastIndex + 10)),\n\n    [pokeData, clickedCards]\n  );\n  useEffect(() => {\n    const loaderTimer = setTimeout(() => setLoader(false), 1500); //Pikachu gif timer\n    return () => clearTimeout(loaderTimer);\n  }, []);\n\n  const saveCard = (id) => {\n    clickedCards.includes(id)\n      ? setGameOver(true)\n      : setClickedCards([...clickedCards, id]); //save card's id only if it's unique otherwise GAMEOVER\n  };\n\n  useEffect(() => {\n    setLastIndex((preIndex) => (preIndex += 1));\n    setCardGrid((preCards) => preCards.sort(() => Math.random() - 0.5)); //shuffle gridCard array\n\n    setInProp(!inProp);\n    gameOver ? setUserScore(0) : setUserScore((preScore) => (preScore += 1));\n  }, [clickedCards]);\n\n  return !loader ? (\n    <div className=\"App\">\n      <Header gameOver={gameOver} />\n      <ScoreBoard userScore={userScore} gameOver={gameOver} />\n\n      <CSSTransition in={inProp} timeout={100} classNames=\"my-node\">\n        <main className=\"container\">\n          {cardGrid.map((pokemon) => (\n            <Cards\n              key={pokemon.id}\n              id={pokemon.id}\n              sprite={pokemon.sprites.front_default}\n              name={pokemon.forms[0].name}\n              saveCard={saveCard}\n              gameOver={gameOver}\n            />\n          ))}\n        </main>\n      </CSSTransition>\n\n      <Footer />\n    </div>\n  ) : (\n    <div className=\"loader\">\n      <img src={loaderGif} alt=\"happy-pikachu\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}